/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import static gui.UserRegistration.jTable1;
import java.awt.Font;
import java.sql.ResultSet;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MySQL;

/**
 *
 * @author Home
 */
public class ProductRegistration extends javax.swing.JPanel {

    /**
     * Creates new form ProductRegistration
     */
    public static String pname;

    public ProductRegistration() {
        initComponents();
        jTable1.getTableHeader().setFont(new Font("Arial", Font.BOLD, 19));
        jTable1.setRowHeight(28);
        loadProducts();
    }

    public static void loadProducts() {

        try {
            ResultSet rs = MySQL.search("SELECT * FROM `products` INNER JOIN `brand` ON `products`.`brand_id` = `brand`.`id` INNER JOIN `category` ON `category`.`id` = `products`.`category_id` INNER JOIN `sub_categories` ON `sub_categories`.`id` = `products`.`sub_category_id` INNER JOIN `supplier` ON `supplier`.`id` = `products`.`supplier_id` INNER JOIN `status` ON `status`.`id` = `products`.`status_id` INNER JOIN `qty_types` ON `qty_types`.`id` = `products`.`qty_types_id` ORDER BY `products`.id ASC;");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {

                String pid = rs.getString("products.id");

                ResultSet rs2 = MySQL.search("SELECT SUM(stock.qty) AS sq FROM stock WHERE product_id = '" + pid + "' ");

                rs2.next();

                String sq = rs2.getString("sq");
                if (sq == null) {

                    sq = "0.000";
                }

                Vector v = new Vector();
                v.add(rs.getString("products.id"));
                v.add(rs.getString("products.name"));
                v.add(rs.getString("products.code"));
                v.add(rs.getString("status.name"));
                v.add(rs.getString("category.name"));
                v.add(rs.getString("sub_categories.name"));
                v.add(rs.getString("brand.name"));
                v.add(rs.getString("supplier.name"));
                if (rs.getString("qty_types.name").equals("Pcs")) {

                    sq = String.valueOf(sq).split("\\.")[0];
                }
                v.add(sq);
                //v.add(rs.getString("stock.qty") + "/ " + rs.getString("qty_types.name"));

                dtm.addRow(v);

            }

            jTable1.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void loadProducts(String text) {

        try {
            ResultSet rs = MySQL.search("SELECT * FROM `products` INNER JOIN `brand` ON `products`.`brand_id` = `brand`.`id` INNER JOIN `category` ON `category`.`id` = `products`.`category_id` INNER JOIN `sub_categories` ON `sub_categories`.`id` = `products`.`sub_category_id` INNER JOIN `supplier` ON `supplier`.`id` = `products`.`supplier_id` INNER JOIN `status` ON `status`.`id` = `products`.`status_id` WHERE `products`.`name` LIKE '" + text + "%'  OR `brand`.`name` LIKE '" + text + "%' ORDER BY `products`.id ASC;");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {

                String pid = rs.getString("products.id");

                ResultSet rs2 = MySQL.search("SELECT SUM(stock.qty) AS sq FROM stock WHERE product_id = '" + pid + "' ");

                String sq = "0";

                if (rs2.next()) {

                    sq = rs2.getString("sq");
                }

                Vector v = new Vector();
                v.add(pid);
                v.add(rs.getString("products.name"));
                v.add(rs.getString("products.code"));
                v.add(rs.getString("status.name"));
                v.add(rs.getString("category.name"));
                v.add(rs.getString("sub_categories.name"));
                v.add(rs.getString("brand.name"));
                v.add(rs.getString("supplier.name"));
                v.add(sq);

                dtm.addRow(v);

            }

            jTable1.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();

        jPanel1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));

        jTextField1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField1.setText("Search Product by Name or Brand.....");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/addProduct.png"))); // NOI18N
        jButton1.setText("      Add Products");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Code", "Status", "Category", "Sub Category", "Brand", "Supplier", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1375, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2) {

            int r = jTable1.getSelectedRow();
            ProductUpdate pu = new ProductUpdate(null, true);

            if (r == -1) {
                JOptionPane.showMessageDialog(this, "Please Select a Product.", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {

                String pid = jTable1.getValueAt(r, 0).toString();
                pname = jTable1.getValueAt(r, 1).toString();

                String status = jTable1.getValueAt(r, 3).toString();
                String category = jTable1.getValueAt(r, 4).toString();
                String sub_category = jTable1.getValueAt(r, 5).toString();
                String brand = jTable1.getValueAt(r, 6).toString();
                String supplier = jTable1.getValueAt(r, 7).toString();
                //String qty = jTable1.getValueAt(r, 8).toString();

                pu.jTextField1.setText(pname);

                try {
                    ResultSet rs1 = MySQL.search("SELECT * FROM `products` WHERE `id`='" + pid + "'");

                    rs1.next();

                    ResultSet rs2 = MySQL.search("SELECT * FROM `products` INNER JOIN `qty_types` ON `products`.`qty_types_id`=`qty_types`.`id` WHERE `products`.`id`='" + pid + "'");

                    rs2.next();

                    String description = rs1.getString("products.description");
                    String reorder_qty = rs1.getString("products.re_order_qty");
                    String qty_type = rs2.getString("qty_types.name");

                    pu.jLabel10.setText(pid);
                    pu.jTextArea1.setText(description);
                    pu.jComboBox1.setSelectedItem(category);
                    pu.jComboBox2.setSelectedItem(sub_category);
                    pu.jComboBox3.setSelectedItem(brand);

                    pu.jLabel2.setText(supplier);
                    pu.jComboBox5.setSelectedItem(qty_type);

                    if (qty_type.equals("Pcs")) {

                        pu.jTextField2.setText(String.valueOf(reorder_qty).split("\\.")[0]);
                    } else {
                        pu.jTextField2.setText(reorder_qty);

                    }

                    pu.jComboBox4.setSelectedItem(status);
                    //pu.jTextField3.setText(qty);
                    pu.setVisible(true);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        RegisterProducts rp = new RegisterProducts(null, true);
        rp.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
        if (jTextField1.getText().equals("Search Product by Name or Brand.....")) {
            jTextField1.setText("");

        }

    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        String text = jTextField1.getText();
        loadProducts(text);
    }//GEN-LAST:event_jTextField1KeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
